---
title: "Exploratory Analysis of Superstore"
author: "Malika Dhakhwa"
date: "2024-02-23"
output: html_document
---


# Setup
Required packages are loaded.
```{r}

#| message: false
#| warning: false
#load needed packages. 
library(here) #for data loading/saving
library(dplyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(ggplot2) # for visualization
library(tibble) # For rownames_to_column
library(gt) # for table
library(gridExtra)
library(webshot2) #Capture as an Image the gttable before converting it to pdf
library(zoo) #To plot seasonality of sales
```

Data is loaded using here function.

```{r}
#Path to data using here() package
#data_location <- here::here("data","processed-data","processed_superstore.rds")
data_location <- here::here("data","processed-data","processed_superstore_RFM.rds")
#load data
mydata <- readRDS(data_location)
```

# Data exploration through tables

Creating summary table and saving it to the results folder.

```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results","tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

# Descriptive Statistics tables

A meaningful analysis of customer spending behavior require the Invoice Sales Amount, total purchase by a Customer during a period, frequency of purchase by a customer during a period or a combination of those. A table is created which provides the descriptive statistics of sales by Invoice value, Customer purchase and frequency of customer purchase. This table reveals that there were 1402 transactions to 399 different customers during 2010-12-01 and	2011-12-09.  

```{r}

# Aggregate total sales by InvoiceNo for calculating mean, standard deviation, minimum and maximum
Sales_by_Invoice <- mydata %>%
    summarise(
    Count = n(),
    Particulars = "Invoice Value",
    Mean = round(mean(InvoiceValue, na.rm = TRUE), 2),
    SD = round(sd(InvoiceValue, na.rm = TRUE), 2),
    Min = round(min(InvoiceValue, na.rm = TRUE), 2),
    Max = round(max(InvoiceValue, na.rm = TRUE), 2)
  )

# Aggregate total sales by CustomerID to calculate mean, standard deviation, minimum and maximum
TotalSales_customer <- mydata %>%
  group_by(CustomerID) %>%
  summarise(TotalSales = sum(InvoiceValue, na.rm = TRUE)) %>%
  ungroup() %>%
  summarise(
    Count = n(),
    Particulars = "Cumulative Sales to Individual Customers",
    Mean = round(mean(TotalSales, na.rm = TRUE), 2),
    SD = round(sd(TotalSales, na.rm = TRUE), 2),
    Min = round(min(TotalSales, na.rm = TRUE), 2),
    Max = round(max(TotalSales, na.rm = TRUE), 2)
  )

# Frequency of sales per CustomerID (i.e., the count of unique InvoiceNo per CustomerID)for calculating mean, standard deviation, minimum and maximum

sales_frequency_per_customer <- mydata %>%
  group_by(CustomerID) %>%
  summarise(FrequencyOfSales = n_distinct(InvoiceNo)) %>%
  ungroup() %>%
  summarise(
    Count = n(),
    Mean = round(mean(FrequencyOfSales, na.rm = TRUE), 2),
    SD = round(sd(FrequencyOfSales, na.rm = TRUE), 2),
    Min = round(min(FrequencyOfSales, na.rm = TRUE), 2),
    Max = round(max(FrequencyOfSales, na.rm = TRUE), 2)
  ) %>%
  mutate(Particulars = "Sales frequency to Individual Customers")


# Combine the statistics into a single data frame
combined_stats <- bind_rows(Sales_by_Invoice, TotalSales_customer, sales_frequency_per_customer) %>%
  select(Particulars, everything())  # Ensure Particulars column is at the front


# Create and format the gt table
gt_table <- gt(combined_stats) %>%
  tab_header(
    title = "Descriptive Statistics of Sales") %>%
  cols_label(
    Particulars = "Particulars",
    Count = "Count",
    Mean = "Mean",
    SD = "St.Dev.",
    Min = "Min",
    Max = "Max"
  ) %>%
  cols_align(
    align = "center",
    columns = c("Count", "Mean", "SD", "Min", "Max")
  )

# Display the gt table
print(gt_table)


gt_table %>%
  gtsave(here("results","tables", "gt_table.png"))

```
# Data exploration through figures

Next, density plots were created for Sales across customers and Invoice Values. Both figures are heavily right-skewed.The averages of total sales to a customer and total invoice values appear to be less than 2500 and 1250 sterling pounds respectively supporting the mean values of 2025 and 563 in the descriptive table.

A histogram of purchase frequency of each customer is created by grouping each customer by invoice no.The average frequency appears to be less than 5 times for most of the customers which is also observed in the descriptive statistics table.

```{r}
# Aggregate sales by CustomerID
TotalSales_customer <- mydata %>%
  group_by(CustomerID) %>%
  summarise(TotalSales = sum(InvoiceValue, na.rm = TRUE)) %>%
  arrange(desc(TotalSales))

#Density Plot of Sales per Customer
# Assuming sales_per_customer is already calculated
p1 <- ggplot(TotalSales_customer, aes(x = TotalSales)) +
  geom_density(fill = "skyblue", alpha = 0.5) +
  labs(title = "Density Plot of Sales across Customers", x = "Total Sales", y = "Density")

# Histogram of Sales by Invoice values

p2 <- ggplot(mydata, aes(x = InvoiceValue)) +
  geom_density(fill = "lightgreen", alpha = 0.5) +
  labs(title = "Density Plot of  Invoice Sales",
       x = "Invoice Value", 
       y = "Density") +
  theme_minimal()

# Calculate purchase frequency per customer
purchase_frequency <- mydata %>%
  distinct(CustomerID, InvoiceNo) %>% # Ensure unique InvoiceNo per CustomerID
  count(CustomerID, name = "PurchaseFrequency") # Count the number of invoices per customer
library(ggplot2)

# Histogram of purchase frequencies
p3 <- ggplot(purchase_frequency, aes(x = PurchaseFrequency)) +
  geom_histogram(binwidth = 1, fill = "salmon", color = "darkblue") + # Adjust binwidth as needed
  labs(title = "Histogram of Customer Purchase Frequencies",
       x = "No. of Purchases", 
       y = "Count of Customers") +
  theme_minimal()

# Modify p1 to adjust title font size
p1 <- p1 + theme(plot.title = element_text(size = 11)) # Adjusting font size of the title of p1
# Modify p2 to adjust title font size
p2 <- p2 + theme(plot.title = element_text(size = 11)) # Adjusting font size of the title of p2
# Modify p3 to adjust title font size
p3 <- p3 + theme(plot.title = element_text(size = 11)) # Adjusting font size of the title of p3

plot1<-grid.arrange(p1, p2, p3, ncol = 2, nrow=2)

figure_file = here("results","figures","Sales_distribution.png")
ggsave(filename = figure_file, plot=plot1) 

```


Next, total purchase by a customer was plotted against purchase frequency.A few outliers were noted. 

```{r}
#| message: false
#| warning: false
# Calculate purchase frequency and total invoice value per customer
customer_stats <- mydata %>%
  group_by(CustomerID) %>%
  summarise(PurchaseFrequency = n_distinct(InvoiceNo),
            TotalInvoiceValue = sum(InvoiceValue, na.rm = TRUE)) %>%
  ungroup()  # Ensure the data is ungrouped for further analysis

# Scatter plot of Total Invoice Value by Purchase Frequency
p4 <- ggplot(customer_stats, aes(x = PurchaseFrequency, y = TotalInvoiceValue)) +
  geom_point(alpha = 0.5) +  # Adjust alpha for point transparency, if needed
  geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add a linear regression line without standard error
  labs(title = "Total Invoice Value by Purchase Frequency",
       x = "Purchase Frequency",
       y = "Total Invoice Value") +
  theme_minimal()
plot(p4)


figure_file = here("results","figures","Sales_trend.png")
ggsave(filename = figure_file, plot=p4)



```

Next, Bar chart is created for Sales Distribution by Country. The top five sales are in Germany, France, Spain, Switzerland and Japan. 

```{r}
p5 <- mydata %>% 
  group_by(Country) %>% 
  summarise(TotalSales = sum(InvoiceValue)) %>%
  ggplot(aes(x = reorder(Country, TotalSales), y = TotalSales, fill = Country)) + 
  geom_bar(stat = "identity") + 
  coord_flip() + 
  theme(legend.position = "none")

plot(p5)

figure_file = here("results","figures","Countrywise_Sales.png")
ggsave(filename = figure_file, plot=p5)
```
As the store sells gift goods, an inspection is required to check the seasonality of sales. First, monthly total sales is calculated aggregating Invoice Value by months of the Invoice Date.The aggregated sales is then plotted to visualize seasonal trend which depicted a spike in the sales during the last few months of the year.

```{r}
#Aggregating Sales by months
mydata_aggregated <- mydata %>%
  group_by(InvoiceDate = as.yearmon(InvoiceDate)) %>%
  summarize(TotalValue = sum(InvoiceValue))

# Formatting Date for plotting purposes
mydata_aggregated$InvoiceDate <- as.Date(as.yearmon(mydata_aggregated$InvoiceDate))

p6<-ggplot(mydata_aggregated, aes(x = InvoiceDate, y = TotalValue)) +
  geom_line() + 
  scale_x_date(date_labels = "%b", date_breaks = "1 month") + # Adjust formatting as needed
  labs(title = "Monthly Sales", x = "Month", y = "Sales Value") +
  theme_minimal()
p6

figure_file = here("results","figures","Monthly_Sales.png")
ggsave(filename = figure_file, plot=p6)

```


# Notes

For your own explorations, tables and figures can be "quick and dirty". As long as you can see what's going on, there is no need to polish them. That's in contrast to figures you'll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.

