---
title: "An example exploratory analysis script"
author: "Andreas Handel"
date: "10/28/2021"
output: html_document
---


# Setup
Required packages are loaded.
```{r}
#load needed packages. 
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
```

Data is loaded.

```{r}
#Path to data using here() package
data_location <- here::here("data","processed-data","processed_superstore.rds")
#load data
mydata <- readRDS(data_location)
```

# Data exploration through tables

Creating summary table and saving it to the results folder.

```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results","tables", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

# Data exploration through figures

Histograms were plotted for the continuous outcomes. The data contains individual observations for sales of different stocks in a single invoice. As this project intends to study customer spending, Invoice totals are calculated for purchases by each customer at a time to visualize distribution of customer spending each time.The histogram is heavily right-skewed with higher frequencies at less than 500.

```{r}
# Histogram of Invoice values
## First calculate total invoice value per invoice
invoice_values <- mydata %>%
  group_by(InvoiceNo) %>%
  summarise(TotalInvoiceValue = sum(Sales, na.rm = TRUE))

##Create histogram
p1 <- ggplot(invoice_values, aes(x = TotalInvoiceValue)) +
  geom_histogram(binwidth = 50, fill = "lightblue", color = "darkblue") + # Adjust binwidth as needed
  labs(title = "Histogram of Total Invoice Values",
       x = "Total Invoice Value", 
       y = "Frequency") +
  theme_minimal()
plot(p1)

figure_file = here("results","figures","Sales_distribution.png")
ggsave(filename = figure_file, plot=p1) 
```

Similarly, histogram plot was created for total Quantity of purchase per invoice which is also heavily right-skewed. 

```{r}
## First calculate total invoice quantity per invoice
invoice_quantity <- mydata %>%
  group_by(InvoiceNo) %>%
  summarise(TotalInvoiceQuantity = sum(Quantity, na.rm = TRUE))

p2 <- ggplot(invoice_quantity, aes(x = TotalInvoiceQuantity)) +
  geom_histogram(binwidth = 50, fill = "lightblue", color = "darkblue") + # Adjust binwidth as needed
  labs(title = "Histogram of Total Invoice Quantity",
       x = "Total Invoice Quantity", 
       y = "Frequency") +
  theme_minimal()
plot(p2)

figure_file = here("results","figures","Quantity_distribution.png")
ggsave(filename = figure_file, plot=p2)
```

Histogram is also plotted for price range of the products.Most of the products fall below the price of 5 sterling pounds.

```{r}
# Create histogram of Unit Price

p3 <- ggplot(mydata, aes(x = UnitPrice)) +
  geom_histogram(binwidth = 1, fill = "lightblue", color = "darkblue") + # Adjust binwidth as needed
  labs(title = "Histogram of Unit Price",
       x = "Unit Price", 
       y = "Frequency") +
  theme_minimal()
plot(p3)

figure_file = here("results","figures","UnitPrice_distribution.png")
ggsave(filename = figure_file, plot=p3)
```

Density plot is created for total purchase by each Customer during the period of the data. The average total purchase amount appears to be less than 5000 sterling pounds during that period.

```{r}
# Aggregate sales by CustomerID
sales_per_customer <- mydata %>%
  group_by(CustomerID) %>%
  summarise(TotalSales = sum(Sales, na.rm = TRUE)) %>%
  arrange(desc(TotalSales))

#Density Plot of Sales per Customer
# Assuming sales_per_customer is already calculated
p4 <- ggplot(sales_per_customer, aes(x = TotalSales)) +
  geom_density(fill = "blue", alpha = 0.5) +
  labs(title = "Density of Sales Across Customers", x = "Total Sales", y = "Density")

plot(p4)

figure_file = here("results","figures","Customer_AggregateSales.png")
ggsave(filename = figure_file, plot=p4)

```

Next, histogram of purchase frequency of each customer is created by grouping each customer by invoice no.The frequency appears to be less than 5 times for most of the customers.

```{r}
# Calculate purchase frequency per customer
purchase_frequency <- mydata %>%
  distinct(CustomerID, InvoiceNo) %>% # Ensure unique InvoiceNo per CustomerID
  count(CustomerID, name = "PurchaseFrequency") # Count the number of invoices per customer
library(ggplot2)

# Histogram of purchase frequencies
p5 <- ggplot(purchase_frequency, aes(x = PurchaseFrequency)) +
  geom_histogram(binwidth = 1, fill = "lightblue", color = "darkblue") + # Adjust binwidth as needed
  labs(title = "Histogram of Customer Purchase Frequencies",
       x = "Purchase Frequency", 
       y = "Count of Customers") +
  theme_minimal()
plot(p5)
figure_file = here("results","figures","Customer_purchasefreq.png")
ggsave(filename = figure_file, plot=p5)

```

Next, total purchase by a customer was plotted against purchase frequency.A few outliers were noted which needs to be addressed while model building. 

```{r}
# Calculate purchase frequency and total invoice value per customer
customer_stats <- mydata %>%
  group_by(CustomerID) %>%
  summarise(PurchaseFrequency = n_distinct(InvoiceNo),
            TotalInvoiceValue = sum(Sales, na.rm = TRUE)) %>%
  ungroup()  # Ensure the data is ungrouped for further analysis

# Scatter plot of Total Invoice Value by Purchase Frequency
p6 <- ggplot(customer_stats, aes(x = PurchaseFrequency, y = TotalInvoiceValue)) +
  geom_point(alpha = 0.5) +  # Adjust alpha for point transparency, if needed
  geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add a linear regression line without standard error
  labs(title = "Total Invoice Value by Purchase Frequency",
       x = "Purchase Frequency",
       y = "Total Invoice Value") +
  theme_minimal()
plot(p6)


figure_file = here("results","figures","Sales_trend.png")
ggsave(filename = figure_file, plot=p6)



```

Bar chart of Sales Distribution by Country

```{r}
p8 <- mydata %>% 
  group_by(Country) %>% 
  summarise(TotalSales = sum(Sales)) %>%
  ggplot(aes(x = reorder(Country, TotalSales), y = TotalSales, fill = Country)) + 
  geom_bar(stat = "identity") + 
  coord_flip() + 
  theme(legend.position = "none")

plot(p8)

figure_file = here("results","figures","Countrywise_Sales.png")
ggsave(filename = figure_file, plot=p8)
```



# Notes

For your own explorations, tables and figures can be "quick and dirty". As long as you can see what's going on, there is no need to polish them. That's in contrast to figures you'll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.


